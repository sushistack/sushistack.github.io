I"4<p>요즘 서버들은 Apache보다는 <strong>Nginx</strong> 웹서버를 많이 사용하는 것 같습니다. 그렇게 느낀 이유는 간혹
커스텀 notfound 페이지를 설정해 놓지 않은 페이지들이 있는데, nginx default notfound 페이지를
노출하는 경우를 많이 봤기 때문입니다.</p>

<p>사실 apache보다 nginx를 사용하는 이유는 분명합니다. 아무래도 가장 큰 이유는 요청처리 방식 때문인데, apache의 경우 <code class="language-plaintext highlighter-rouge">multi-thread</code> 기반의 요청처리 방식을 가지고 있고, nginx의 경우 <code class="language-plaintext highlighter-rouge">event-driven</code> 기반의 요청 처리 방식을 가지고 있기 때문입니다.</p>

<h2 id="os-별로-nginx-설치">OS 별로 nginx 설치</h2>

<p>이번 글에서는 macOS, centOS, ubuntu에서 각각 nginx를 설치하고 실행시키는 방법에 대해서 소개해보도록 하겠습니다.</p>

<h3 id="macos에서-nginx-설치하기">macOS에서 nginx 설치하기</h3>

<p>macOS에 nginx를 설치하려는 경우는 아무래도 개발용 PC에서 웹서버를 띄워야하는 상황인데요.
바로 알아보도록 하겠습니다.</p>

<p>우선, 맥에서 nginx를 설치하는 가장 간단한 방법은 <code class="language-plaintext highlighter-rouge">Homebrew</code>를 이용하는 방법입니다.</p>

<div class="related-link-wrap">
    <a class="related-link" href="https://brew.sh" target="_blank" rel="nofollow noopener noreferrer">
      <div class="related-link-icon">
        
        <svg preserveAspectRatio="xMidYMid meet" height="1em" width="1em" fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" stroke="currentColor" class="icon-7f6730be--text-3f89f380"><g><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></g></svg>
        
      </div>
      <div class="link-title-wrap">
        <div class="link-title">
          <div class="link-title-text">The Missing Package Manager for macOS (or Linux) — Homebrew</div>
        </div>
      </div>
      <div class="display-link-wrap">
        <div class="display-link">
          <span class="display-link-text">brew.sh</span>
        </div>
      </div>
    </a>
</div>

<p>위 링크에도 나와 있지만, 터미널에 다음과 같은 명령어를 입력하면 <code class="language-plaintext highlighter-rouge">Homebrew</code>를 설치할 수 있습니다.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>/bin/bash <span class="nt">-c</span> <span class="s2">"</span><span class="si">$(</span>curl <span class="nt">-fsSL</span> https://raw.githubusercontent.com/Homebrew/install/master/install.sh<span class="si">)</span><span class="s2">"</span>
</code></pre></div></div>

<ul>
  <li>Homebrew로 nginx 설치</li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>brew <span class="nb">install </span>nginx
</code></pre></div></div>

<ul>
  <li>Mac에서 nginx 웹서버 실행</li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>nginx
</code></pre></div></div>

<p>브라우저 주소창에 <code class="language-plaintext highlighter-rouge">localhost:8080</code> 입력 및 이동하여 웹서버가 정상적으로 동작하는지 테스트 할 수 있습니다.</p>

<ul>
  <li>nginx 웹서버 종료</li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>nginx <span class="nt">-s</span> stop
</code></pre></div></div>

<h4 id="예시">예시</h4>

<ol>
  <li>Homebrew로 nginx 설치</li>
  <li><code class="language-plaintext highlighter-rouge">sudo nginx</code> 명령어 입력</li>
  <li>브라우저로 <code class="language-plaintext highlighter-rouge">http://localhost:8080</code> 접근</li>
</ol>

<p><img src="/assets/images/mac-nginx1.png" alt="mac-nginx1" />
<img src="/assets/images/mac-nginx2.png" alt="mac-nginx2" />
<img src="/assets/images/mac-nginx3.png" alt="mac-nginx3" />
<img src="/assets/images/mac-nginx4.png" alt="mac-nginx4" /></p>

<h3 id="centos에서-nginx-설치하기">CentOS에서 nginx 설치하기</h3>

<p>CentOS에서 nginx를 설치하는 가장 간단한 방법은 <code class="language-plaintext highlighter-rouge">yum</code>이라는 패키지 매니저를 사용하는 것입니다.
하지만 nginx는 <code class="language-plaintext highlighter-rouge">epel-release</code>라는 repository에 포함되어 있습니다. 따라서 다음과 같은
명령어로 <code class="language-plaintext highlighter-rouge">epel-release</code>라는 repository를 추가해줍니다.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>yum <span class="nb">install </span>epel-release
</code></pre></div></div>

<ul>
  <li>yum으로 nginx 설치</li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>yum <span class="nb">install </span>nginx
</code></pre></div></div>

<ul>
  <li>CentOS에서 nginx 웹서버 실행</li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>systemctl start nginx
</code></pre></div></div>

<blockquote>
  <p>CentOS에서 웹서버가 잘 동작중인지 확인하는 세 가지 방법</p>
</blockquote>

<ul>
  <li>명령어로 웹서버 상태 확인하기</li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>systemctl status nginx
</code></pre></div></div>

<ul>
  <li>curl로 확인</li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl <span class="s2">"http://localhost:8080"</span>
</code></pre></div></div>

<p>그리고 마지막 방법은 외부에서 서버로 접근하는 방법인데요, 이 경우 CentOS의 방화벽을 public으로
설정해줘야합니다.</p>

<p>설정 방법은 다음과 같습니다.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>firewall-cmd <span class="nt">--permanent</span> <span class="nt">--zone</span><span class="o">=</span>public <span class="nt">--add-service</span><span class="o">=</span>http
<span class="nb">sudo </span>firewall-cmd <span class="nt">--permanent</span> <span class="nt">--zone</span><span class="o">=</span>public <span class="nt">--add-service</span><span class="o">=</span>https
<span class="nb">sudo </span>firewall-cmd <span class="nt">--permanent</span> <span class="nt">--zone</span><span class="o">=</span>public <span class="nt">--add-port</span><span class="o">=</span>8080/tcp
<span class="nb">sudo </span>firewall-cmd <span class="nt">--reload</span>
</code></pre></div></div>

<ul>
  <li>CenOS에서 nginx 웹서버 종료</li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>systemctl stop nginx
</code></pre></div></div>

<p>설정 이후 <code class="language-plaintext highlighter-rouge">http://{your-server-ip}:8080</code>으로 접근하여 확인할 수 있습니다.</p>

<h3 id="ubuntu에서-nginx-설치하기">Ubuntu에서 nginx 설치하기</h3>

<p>Ubuntu에서 nginx를 설치하는 가장 간단한 방법은 CentOS와 비슷하게 <code class="language-plaintext highlighter-rouge">apt-get</code>이라는 패키지 매니저를
이용하는 것입니다.</p>

<ul>
  <li>apt-get으로 nginx 설치</li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>apt-get <span class="nb">install </span>nginx
</code></pre></div></div>

<ul>
  <li>ubuntu에서 nginx 웹서버 실행</li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>systemctl start nginx
</code></pre></div></div>

<blockquote>
  <p>Ubuntu에서 웹서버가 제대로 실행되는지 확인하는 세 가지 방법</p>
</blockquote>

<ul>
  <li>명령어로 웹서버 상태 확인하기</li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>systemctl status nginx
</code></pre></div></div>

<ul>
  <li>curl로 확인</li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl <span class="s2">"http://localhost:8080"</span>
</code></pre></div></div>

<p>우분투의 경우, 방화벽 포트를 활성화하려면 <code class="language-plaintext highlighter-rouge">ufw</code>와 <code class="language-plaintext highlighter-rouge">iptables</code>를 이용하여야 합니다. 하지만
<code class="language-plaintext highlighter-rouge">ufw</code>의 경우 <code class="language-plaintext highlighter-rouge">apt-get</code>으로 따로 설치해야합니다.</p>

<ul>
  <li>ufw 설치 및 방화벽 포트 활성화</li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>apt-get <span class="nb">install </span>ufw
<span class="nb">sudo </span>ufw allow 3306
</code></pre></div></div>

<ul>
  <li>iptables를 이용하여 방화벽 포트 활성화</li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>iptables <span class="nt">-A</span> INPUT <span class="nt">-m</span> state <span class="nt">--state</span> NEW <span class="nt">-m</span> tcp <span class="nt">-p</span> tcp <span class="nt">--dport</span> 8080 <span class="nt">-j</span> ACCEPT
</code></pre></div></div>

<h3 id="각-os-별-nginx-시작-재시작-중지-상태-명령어-모음">각 OS 별 nginx 시작, 재시작, 중지, 상태 명령어 모음</h3>

<p>각 OS 별로 nginx의 명령어의 형태가 약간씩 다릅니다. OS 별 명령어를 정리해서 소개해드리려고 합니다.</p>

<h4 id="macos">MacOS</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># start</span>
<span class="nb">sudo </span>nginx
brew services start nginx

<span class="c"># restart</span>
<span class="nb">sudo </span>nginx <span class="nt">-s</span> reload
brew services restart nginx

<span class="c"># stop or quit(graceful shutdown)</span>
<span class="nb">sudo </span>nginx <span class="nt">-s</span> stop <span class="c">#quit</span>
brew services stop nginx

<span class="c"># status - not supported</span>
</code></pre></div></div>

<h4 id="centos-및-ubuntu">CentOS 및 Ubuntu</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># start</span>
<span class="nb">sudo </span>service nginx start
<span class="nb">sudo </span>systemctl start nginx
<span class="nb">sudo</span> /etc/init.d/nginx start

<span class="c"># restart</span>
<span class="nb">sudo </span>service nginx restart
<span class="nb">sudo </span>systemctl restart nginx
<span class="nb">sudo</span> /etc/init.d/nginx restart

<span class="c"># stop</span>
<span class="nb">sudo </span>service nginx stop
<span class="nb">sudo </span>systemctl stop nginx
<span class="nb">sudo</span> /etc/init.d/nginx stop

<span class="c"># status</span>
<span class="nb">sudo </span>service nginx status
<span class="nb">sudo </span>systemctl status nginx

<span class="c"># reload configuration</span>
<span class="nb">sudo </span>service nginx reload
<span class="nb">sudo </span>systemctl reload nginx
<span class="nb">sudo </span>nginx <span class="nt">-s</span> reload
</code></pre></div></div>

<h2 id="맺음">맺음</h2>

<p>이렇게 각 OS별로 <code class="language-plaintext highlighter-rouge">Nginx</code> 설치하는 방법에 대해서 알아보았습니다. 궁금한 점이나 글에 이상한 점이 있다면 댓글 부탁드리겠습니다.</p>

<p>감사합니다.</p>

<h4 id="ref">Ref</h4>

<div class="related-link-wrap">
    <a class="related-link" href="https://www.nginx.com/resources/wiki/start/topics/tutorials/install/" target="_blank" rel="nofollow noopener noreferrer">
      <div class="related-link-icon">
        
        <svg preserveAspectRatio="xMidYMid meet" height="1em" width="1em" fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" stroke="currentColor" class="icon-7f6730be--text-3f89f380"><g><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></g></svg>
        
      </div>
      <div class="link-title-wrap">
        <div class="link-title">
          <div class="link-title-text">Install | NGINX</div>
        </div>
      </div>
      <div class="display-link-wrap">
        <div class="display-link">
          <span class="display-link-text">www.nginx.com</span>
        </div>
      </div>
    </a>
</div>
:ET