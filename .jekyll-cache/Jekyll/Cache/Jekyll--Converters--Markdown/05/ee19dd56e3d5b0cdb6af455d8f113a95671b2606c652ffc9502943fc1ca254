I"I<p>과거 글 중에 톰캣에 오라클에서 만든 Keytool이라는 커맨드라인 프로그램을 이용하여 만든 키를 적용하는 방법에 대해서 소개해 드린적이 있습니다. 하지만 만약 웹 어플리케이션이 FE와 BE로 나뉘어져 있는 상태에서 FE에서 사용하는 인증서와 BE에서 사용하는 인증서가 다를 수 밖에 없습니다. 그 이유는 BE에서는 keytool을 이용하여 인증서를 대체할 파일을 만들었기 때문입니다.</p>

<h2 id="톰캣-openssl-적용하기">톰캣 OpenSSL 적용하기</h2>

<p>이번 글에서는 OpenSSL 등으로 이미 생성되어 있는 인증서를 톰캣에 적용하는 방법에 대해서 소개해드리려고 합니다. 저도 검색해가면서 적용을 하였습니다. 생각보다 간단하게 할 수 있엇는데, 시간은 오래걸렷던 것 같습니다.</p>

<p>keytool만을 이용해서 톰캣에 SSL을 적용하는 방법을 아래 링크를 통해서 확인하실 수 있습니다.</p>

<div class="related-link-wrap">
    <a class="related-link" href="/back-end/spring/tomcat-ssl" target="_self" rel="noopener noreferrer">
      <div class="related-link-icon">
         <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" id="Calque_1" width="32" height="32" viewBox="0 0 70 70" style="overflow:visible" xml:space="preserve"><g><g transform="translate(-186.000000, -128.000000)"><path id="GitBook_logo_blue" style="fill:#8a4baf;" d="M217.505,179.83c1.129,0,2.048,0.919,2.048,2.047    c0,1.129-0.919,2.047-2.048,2.047c-1.129,0-2.047-0.919-2.047-2.047C215.457,180.749,216.376,179.83,217.505,179.83     M249.659,167.149c-1.129,0-2.048-0.919-2.048-2.047c0-1.129,0.919-2.048,2.048-2.048c1.129,0,2.047,0.919,2.047,2.048    C251.707,166.23,250.788,167.149,249.659,167.149 M249.659,158.761c-3.496,0-6.341,2.844-6.341,6.341    c0,0.681,0.113,1.359,0.336,2.018l-20.946,11.15c-1.19-1.715-3.119-2.731-5.205-2.731c-2.417,0-4.62,1.383-5.686,3.544    l-18.818-9.921c-1.988-1.045-3.476-4.32-3.318-7.3c0.082-1.555,0.619-2.761,1.437-3.227c0.519-0.295,1.144-0.269,1.807,0.078    l0.126,0.066c4.985,2.627,21.304,11.222,21.991,11.541c1.06,0.49,1.65,0.689,3.456-0.167l33.732-17.543    c0.494-0.187,1.071-0.66,1.071-1.38c0-0.998-1.032-1.391-1.035-1.391c-1.918-0.92-4.867-2.301-7.744-3.647    c-6.148-2.879-13.116-6.141-16.176-7.744c-2.642-1.383-4.768-0.217-5.148,0.019l-0.737,0.365    c-13.772,6.811-32.203,15.939-33.253,16.577c-1.879,1.143-3.043,3.421-3.193,6.249c-0.235,4.483,2.052,9.156,5.321,10.871    l19.898,10.262c0.448,3.105,3.121,5.429,6.27,5.429c3.464,0,6.288-2.792,6.34-6.244l21.915-11.877    c1.111,0.868,2.489,1.345,3.9,1.345c3.496,0,6.341-2.845,6.341-6.341S253.155,158.761,249.659,158.761" /></g></g></svg>
        
      </div>
      <div class="link-title-wrap">
        <div class="link-title">
          <div class="link-title-text">스프링 부트 내장 톰캣 SSL 적용하기</div>
        </div>
      </div>
      <div class="display-link-wrap">
        <div class="display-link">
          <span class="display-link-text">deeplify.dev</span>
        </div>
      </div>
    </a>
</div>

<h3 id="openssl">OpenSSL</h3>

<p>OpenSSL은 인증서 파일의 <code class="language-plaintext highlighter-rouge">.pem</code>과 <code class="language-plaintext highlighter-rouge">.key</code> 파일을 만들어낼 수 있는 툴입니다. 설치는 검색해보시면 바로 나오니 따로 설명은 드리지 않도록 하겠습니다.</p>

<p>OpenSSL을 설치하셨으면 다음과 같은 명령어로 키셋을 만들어줍니다.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>openssl req <span class="nt">-x509</span> <span class="nt">-sha256</span> <span class="nt">-nodes</span> <span class="nt">-newkey</span> rsa:2048 <span class="nt">-keyout</span> private.key <span class="nt">-out</span> public.pem
</code></pre></div></div>

<h3 id="openssl-to-pkcs12">OpenSSL to PKCS12</h3>

<p>톰캣에는 바로 OpenSSL로 만들어진 파일을 설정하여 인증서를 등록할 수 없습니다. 따라서 PKCS12 파일로 변경을 해서 설정해주셔야합니다. <code class="language-plaintext highlighter-rouge">.key</code>파일과 <code class="language-plaintext highlighter-rouge">.pem</code>파일이 있는 곳에서 다음 명령어를 실행해주시면 PKCS12 파일을 만드실 수 있습니다.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>openssl pkcs12 <span class="nt">-export</span> <span class="nt">-inkey</span> private.key <span class="nt">-in</span> public.pem <span class="nt">-name</span> alias_name <span class="nt">-out</span> certificate.p12 <span class="nt">-caname</span> root
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">alias_name</code>은 따로 자신이 알아볼 수 있는 값으로 변경하시고, 만들어진 파일(certificate.p12)을 프로젝트 resources 폴더에 위치시켜주시면 됩니다.</p>

<h3 id="설정-applicationyml">설정 (application.yml)</h3>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">server</span><span class="pi">:</span>
  <span class="na">port</span><span class="pi">:</span> <span class="m">8443</span>
  <span class="na">ssl</span><span class="pi">:</span>
    <span class="na">enabled</span><span class="pi">:</span> <span class="no">true</span>
    <span class="na">key-alias</span><span class="pi">:</span> <span class="s">alias_name</span>
    <span class="na">key-store</span><span class="pi">:</span> <span class="s">classpath:certificate.p12</span>
    <span class="na">key-store-type</span><span class="pi">:</span> <span class="s">PKCS12</span>
    <span class="na">key-store-password</span><span class="pi">:</span> <span class="s">pa55w0rd</span>
</code></pre></div></div>

<h2 id="맺음">맺음</h2>

<p>간단하게 OpenSSL에서 만든 인증서를 톰캣에 적용하는 방법에 대해서 알아보았습니다. 궁금하신 점이나 이상한 점이 있으면 댓글 부탁드리겠습니다.</p>

<p>감사합니다.</p>
:ET